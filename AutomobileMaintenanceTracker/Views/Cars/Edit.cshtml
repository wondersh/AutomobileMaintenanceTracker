@using MyToolkit.Html
@model AutomobileMaintenanceTracker.Models.Car

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="form-horizontal col-md-5">
            <h4>Car</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.Type, null, htmlAttributes: new { @class = "form-control typeChange" })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Vin, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Vin, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Vin, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Make, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Make, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Milage, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Milage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Milage, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MaintainceTasks, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.CollectionEditorFor(m => m.MaintainceTasks, "_TaskEditor", null, "dummy", new { @class = "hidden-button" })
                </div>
            </div>
        </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    <input id="changeTypeButton" type="submit" value="ChangeType" formaction="@Url.Action("ChangeCarType")" style="display: none;"/>
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-default" })
</div>
<script>
    $(document).ready(function () {
        $('.hidden-button').hide();
        $(".datetimepicker ").datetimepicker({
            dateFormat: "dd/mm/yy",
        });
        $('.typeChange').focus(function () {
            prev_val = $(this).val();
        }).change(function () {
            var temp = $(this);
            $.confirm({
                title: 'Please Confirm!',
                content: 'Changing type will change legibility for maintaince tasks and may truncate unqulified ones for the new type.',
                buttons: {
                    confirm: function () {
                        $('#changeTypeButton').click();
                    },
                    cancel: function () {
                        $(temp).val(prev_val);
                    }
                }
            });
        });;
    });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
